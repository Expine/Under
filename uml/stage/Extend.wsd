@startuml StageExtend
package under {
    package extend {
        package ex_stage {
            class StackStageManager {
                #stageStack : Array<Stage>
                +pushStage(stageName) <<override>>
                +popStage() : Stage <<override>>
                +getStage() : STage <<override>>
            }
            class SplitManagementStage {
                +constructor(stageWidth,stageHeight)
                #entities : Array<Entity>
                #sortedEntity : Array<Entity>
                #removeList : Array<Entity>
                #player : Playable
                #inited : boolean
                +init() <<override>>
                +addEntity(entity) <<override>>
                +removeEntity(entity) <<override>>
                #removeEntityImmediately(entity) <<override>>
                +getEntities() : Array<Entity> <<override>>
                #updateEntity(dt) <<override>>
                #updatePhysics(dt) <<override>>
                #updateBackground(dt) <<override>>
                #updateCemera(dt) <<override>>
                #renderBackground(ctx,shiftX,shiftY) <<override>>
                #renderEntity(ctx,shiftX,shiftY) <<override>>
                #renderWorld(ctx,shiftX,shiftY) <<override>>
            }
        }
    }
}

package under {
    package base {
        package stage {
            abstract Stage
            abstract StageManager
            package parser {
                abstract StageParser
            }
            package back {
                abstract Background
            }
            package camera {
                abstract Camera
            }
            package physics {
                abstract PhysicalWorld
            }
            package entity {
                package interface {
                    interface IPlayable
                }
                abstract Entity
                abstract InfluentialEntity
            }
        }
    }
}

StageParser <.. StackStageManager : Parse
Entity "*" ..o "1" SplitManagementStage : Own and init, update, render
IPlayable <.. SplitManagementStage : Get camera
InfluentialEntity <.. SplitManagementStage : Pass
Camera <.. SplitManagementStage : Set
Background <.. SplitManagementStage : Render
PhysicalWorld <.. SplitManagementStage : Set and update

StageManager <|.. StackStageManager
Stage <|.. SplitManagementStage

@enduml
