@startuml StageExtendCamera
package under {
    package extend {
        package ex_stage {
            package ex_camera {
                class CenterCamera {
                    +init(x,y) <<override>>
                    +update(x.y,dt) <<override>>
                }
                class FixCamera {
                    +constructor(x,y)
                    #fixX : number
                    #fixY : number
                    +init(x,y) <<override>>
                    +update(x.y,dt) <<override>>
                }
                class MovingCamera {
                    +update(x.y,dt) <<override>>
                }
                class ClipCamera {
                    +init(x,y) <<override>>
                    +update(x.y,dt) <<override>>
                    #clip()
                }
                class ForceMoveCamera {
                    +constructor(baseCamera,x,y,speed)
                    #baseCamera : Camera
                    #toX : number
                    #toY : number
                    #speed : number
                    #nextX : number
                    #nextY : number
                    +init(x,y) <<override>>
                    +update(x.y,dt) <<override>>
                }
                class EventCamera {
                    #toX : number
                    #toY : number
                    +setToPosition(x,y)
                    +update(x.y,dt) <<override>>
                }
            }

        }
    }
}

package under {
    package base {
        package stage {
            package camera {
                abstract Camera
                abstract DelegateCamera
            }
        }
    }
}

Camera <|.. CenterCamera
Camera <|.. FixCamera
DelegateCamera <|.. MovingCamera
DelegateCamera <|.. ClipCamera
DelegateCamera <|.. ForceMoveCamera
DelegateCamera <|.. EventCamera

@enduml
