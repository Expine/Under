@startuml PhysicalExtend

package under {
    package extend {
        package ex_stage {
            package ex_physics {
                package ex_body {
                    class MaxAdoptBody {
                        #internalAccelerationX : number
                        #internalAccelerationY : number
                        #vpx : number
                        #vpy : number
                        #vmx : number
                        #vmy : number
                        #preX : number
                        #preY : number
                        +setNextAddVelocity(vx,vy) <<override>>
                        +reset() <<override>>
                        +enforce(forceX,forceY) <<override>>
                        +updateInfo(dt) <<override>>
                        +updateVelocity(dt) <<override>>
                        +updateEntity(dt) <<override>>
                        +cleanup(dt) <<override>>
                    }
                    class PreciseBody {
                        +updateEntity(dt) <<override>>
                    }
                    class PlayerBody
                    interface IJoint {
                        {abstract} +joind(jointed,jointedX,jointedY,length)
                        {abstract} +unjoint()
                    }
                    class JointBody {
                        constructor(jointingX,jointingY)
                        #jointingX : number
                        #jointingY : number
                        #jointed : Entity
                        #jointedX : number
                        #jointedY : number
                        #length : number
                        +joind(jointed,jointedX,jointedY,length) <<override>>
                        +unjoint() <<override>>
                        +updateVelocity(dt) <<override>>
                        +updateEntity(dt) <<override>>
                    }
                    class ImmutableRigidMaterial {
                        constructor(k,frictionX,frictionY)
                        #kVal : number
                        #frictionXVal : number
                        #frictionYVal : number
                        +k() : number <<getter>> <<override>>
                        +frictionX() : number <<getter>> <<override>>
                        +frictionY() : number <<getter>> <<override>>
                        +gravityScale() : number <<getter>> <<override>>
                    }
                    class MutableRigidMaterial {
                        +k() : number <<getter>> <<override>>
                        +frictionX() : number <<getter>> <<override>>
                        +frictionY() : number <<getter>> <<override>>
                        +gravityScale() : number <<getter>> <<override>>
                        +k(val) <<setter>> <<override>>
                        +frictionX(val) <<setter>> <<override>>
                        +frictionY(val) <<setter>> <<override>>
                        +gravityScale(val) <<setter>> <<override>>
                    }
                }

                package ex_material {
                    class ImmutableMaterial  {
                        ImmutableMaterial(mass,elasticity,mu) : ImmutableMaterial
                        #massVal : number
                        #eVal : number
                        #muVal : number
                        +k() : number <<getter>> <<override>>
                        +frictionX() : number <<getter>> <<override>>
                        +frictionY() : number <<getter>> <<override>>
                        +gravityScale() : number <<getter>> <<override>>
                    }
                }
            }
        }
    }
}

package under {
    package base {
        package stage {
            abstract Stage
            package physics {
                abstract PhysicalWorld
                package entity {
                    abstract Entity
                    abstract InfluentialEntity
                    abstract MutableEntity
                }
                package colloder {
                    abstract Collider
                    abstract CollisionData
                }
                package body {
                    abstract RigidBody
                    abstract RigidMaterial
                }
                package material {
                    abstract Material
                }
            }
        }
    }
}

MutableEntity <.. MaxAdoptBody : Get
Material <.. MaxAdoptBody : Get
RigidMaterial <.. MaxAdoptBody : Get and set

MutableEntity <... PreciseBody : Move
Stage <... PreciseBody : Get
PhysicalWorld <... PreciseBody : Get
CollisionData <... PreciseBody : Get
Collider <... PreciseBody : Response

MutableEntity <.. JointBody : Get and move
Entity <.. JointBody : Get

RigidBody <|.. MaxAdoptBody
MaxAdoptBody <|--- PreciseBody
MaxAdoptBody <|-- PlayerBody
IJoint <|. JointBody
MaxAdoptBody <|-- JointBody
RigidMaterial <|.. ImmutableRigidMaterial
ImmutableRigidMaterial <|-- MutableRigidMaterial

Material <|.. ImmutableMaterial

@enduml
