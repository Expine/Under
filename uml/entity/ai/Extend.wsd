@startuml AIExtend

package under {
    package extend {
        package ex_stage {
            package ex_ai {
                class NamedStateAI {
                    #state : State
                    #stateName : string
                    #nameStates : Dictionary<string, State>
                    +init() <<override>>
                    +getState() <<override>>
                    +getStateID() <<override>>
                    +changeState(id) <<override>>
                }
                class StraightAI {
                    +constructor(mvx,px)
                    #maxVelocityX : number
                    #walkPower : number
                    +apply(dt) : boolean <<override>>
                }
                class JumpAI {
                    +constructor(jumpPower)
                    #jumpPower : number
                    #onGroundCount : number
                    #jumpedCount : number
                    +apply(dt) : boolean <<override>>
                }
                class EnemyAI {
                    +constructor(baseAI)
                    #baseAI : AI
                    #preDireciontX : number
                    #preDireciontY : number
                    +setEntity(entity) <<override>>
                    +init() <<override>>
                    +update(dt) <<override>>
                    +apply(dt) : boolean <<override>>
                }
                package ex_attack {
                    class AttackObjectAI {
                        #actor : Entity
                        #preActorX : number
                        #preActorY : number
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                    class StraightAttackAI {
                        +constructor(maxVelocityX,maxVelocityY,movePowerX,movePowerY)
                        #maxVelocityX : number
                        #maxVelocityY : number
                        #movePowerX : number
                        #movePowerY : number
                        #actor : Entity
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                }

                package ex_state {
                    abstract BaseState {
                        +init() <<override>>
                    }
                    class NoneState {
                        +apply(dt) : boolean <<override>>
                    }
                }
            }
        }
    }
}

package under {
    package base {
        package resource {
            package image {
                abstract NamedAnimation
            }
        }
        package stage {
            package ai {
                abstract AI
                abstract StateAI
                abstract State
            }
            package entity {
                abstract AutonomyEntity
                package interface {
                    interface IDamagable
                    interface IOwned
                }
            }
            package physics {
                package collider {
                    abstract Collider
                    abstract CollisionData
                }
                package body {
                    abstract RigidBody
                }
                package Material {
                    abstract Material
                }
            }
        }
    }
}

AutonomyEntity <.. StraightAI : Get and set
RigidBody <.. StraightAI : Enforce
Material <.. StraightAI : Get
AutonomyEntity <.. JumpAI : Get
RigidBody <.. JumpAI : Enforce
Material <.. JumpAI : Get
AutonomyEntity <.. EnemyAI : Get
Collider <.. EnemyAI : Get
CollisionData <.. EnemyAI : Get
IDamagable <.. EnemyAI : Damage

NamedAnimation <.. BaseState : Set name

AutonomyEntity <.. AttackObjectAI : Move
IOwned <.. AttackObjectAI : Get
Collider <.. AttackObjectAI : Get
CollisionData <.. AttackObjectAI : Get
IDamagable <.. AttackObjectAI : Damage

AutonomyEntity <.. StraightAttackAI : Move
IOwned <.. StraightAttackAI : Get
RigidBody <.. StraightAttackAI : Move
Collider <.. StraightAttackAI : Get
CollisionData <.. StraightAttackAI : Get
IDamagable <.. StraightAttackAI : Damage

StateAI <|.. NamedStateAI
AI <|.. StraightAI
AI <|.. JumpAI
AI <|.. EnemyAI

AI <|.. AttackObjectAI
AI <|.. StraightAttackAI

State <|.. BaseState
State <|.. NoneState

@enduml
