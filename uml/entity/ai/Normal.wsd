@startuml AINormal
package game {
    package ga_stage {
        package ga_ai {
            package ga_player {
                package ga_normal {
                    class NormalBaseStateAI
                    class NormalStationaryState {
                        +constructor(maxVelocityX,walkPower)
                        #fallCount : number
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                    class NormalWalkState {
                        +constructor(maxVelocityX,walkPower)
                        #fallCount : number
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                    class NormalJumpState {
                        +constructor(jumpPower)
                        #jumpPower : number
                        #inAirCount : number
                        #jumpPressedTime : number
                        #jumpDeltaTime : number
                        #reservedVelocityX : number
                        +speedMagnification(val) <<setter>> <<override>>
                        +appliedPower(val) <<setter>> <<override>>
                        +speedMagnification() : number <<getter>> <<override>>
                        +appliedPower() : number <<getter>> <<override>>
                        +init() <<override>>
                        +update(dt) <<override>>
                        +apply(dt) <<override>>
                    }
                    class NormalJumpingState {
                        +constructor(maxVelocityX,movePower)
                        +apply(dt) <<override>>
                    }
                    class NormalFallState {
                        +constructor(maxVelocityX,movePower)
                        +apply(dt) <<override>>
                    }
                    class NormalPunchState {
                        #attacked : boolean
                        #threshold : number
                        #makeAttackObject() : Entity
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                    class NormalGrabState {
                        #underCount : number
                        #underDiffY : number
                        #player : IUnderPlayable
                        +init() <<override>>
                        #chaged()
                        #grabCollider()
                        #restoreCollider()
                        #judgeContinue() : boolean
                        #grabWalk(dt)
                        +init() <<override>>
                        +apply(dt) : boolean <<override>>
                    }
                    class NormalSpecialState {
                        +apply(dt) : boolean <<override>>
                    }
                }
            }
        }
    }
}

package under {
    package base {
        package input {
            interface IKey
        }
        package resouce {
            package image {
                abstract GameImage
                abstract GameAnimation
                abstract NamedAnimation
            }
        }
        package stage {
            abstract Stage
            package ai {
                abstract StateAI
            }
            package entity {
                abstract AutonomyEntity
            }
            package physical {
                abstract PhysicalWorld
                package collider {
                    abstract Collider
                    abstract AABB
                    abstract CollisionData
                }
                package body {
                    abstract RigidBody
                }
            }
        }
    }
}
package game {
    package ga_stage {
        package  ga_ai {
            interface IPrepareState
            package ga_player {
                abstract UnderStateAI
                abstract UnderPlayerState
                abstract UnderMovableState
            }
        }
        package ga_entity {
            package ga_interface {
                interface ITerrain
                interface IUnderPlayable
            }
        }
    }
}

NormalBaseStateAI ..> NormalStationaryState : Generate
NormalBaseStateAI ..> NormalWalkState : Generate
NormalBaseStateAI ..> NormalJumpState : Generate
NormalBaseStateAI ..> NormalJumpingState : Generate
NormalBaseStateAI ..> NormalFallState : Generate
NormalBaseStateAI ..> NormalPunchState : Generate
NormalBaseStateAI ..> NormalGrabState : Generate
NormalBaseStateAI ..> NormalSpecialState : Generate

StateAI <.... NormalStationaryState : Change
IKey <.... NormalStationaryState : Get
StateAI <.... NormalWalkState : Change
IKey <.... NormalWalkState : Get

GameImage <.... NormalJumpState : Update and judge
StateAI <.... NormalJumpState : Change
IKey <.... NormalJumpState : Get
AutonomyEntity <.... NormalJumpState : Get
RigidBody <.... NormalJumpState : Enforce

StateAI <.... NormalJumpingState : Change
AutonomyEntity <.... NormalJumpingState : Get
RigidBody <.... NormalJumpingState : Get
StateAI <.... NormalFallState : Change

AutonomyEntity <.... NormalPunchState : Get and set
StateAI <.... NormalPunchState : Change
Stage <.... NormalPunchState : Create
GameAnimation <.... NormalPunchState : Judge

AutonomyEntity <.... NormalGrabState : Get
Collider <.... NormalGrabState : Fix
AABB <.... NormalGrabState : Get
Stage <.... NormalGrabState : Get
PhysicalWorld <.... NormalGrabState : Get
CollisionData <.... NormalGrabState : Get
GameImage <.... NormalGrabState : Init
GameAnimation <.... NormalGrabState : Get and set
NamedAnimation <.... NormalGrabState : Get ID
NormalGrabState ..> IUnderPlayable : Change
NormalGrabState ..> ITerrain : Get

IKey <.... NormalSpecialState : Get

UnderStateAI <|.. NormalBaseStateAI
UnderMovableState <|.. NormalStationaryState
UnderMovableState <|.. NormalWalkState
UnderMovableState <|.. NormalJumpingState
UnderMovableState <|.. NormalFallState
UnderPlayerState <|.. NormalJumpState
IPrepareState <|.. NormalJumpingState
UnderPlayerState <|.. NormalPunchState
UnderPlayerState <|.. NormalGrabState
UnderPlayerState <|.. NormalSpecialState

@enduml
