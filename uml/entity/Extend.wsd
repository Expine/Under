@startuml EntityExtend
package under {
    package extend {
        package ex_stage {
            package ex_entity {
                class TileObject
                class Obstacle
                class OnlyImageEntity
                class AIListedObject {
                    #ai : Array<AI>
                    +addAI(ai,priotiy) <<override>>
                    +removeAI(ai) <<override>>
                    +updateAI(dt) <<override>>
                    +applyAI(dt) <<override>>
                }
                package ex_happen {
                    package ex_attack {
                        class AttackObject {
                            +constructor(lifespan)
                            #lifespan : number
                            +destroy() <<override>>
                            +update(dt) <<override>>
                        }
                    }
                    abstract PossessedObject {
                        #owner : Entity
                        +setOwner(owner)
                    }
                }
            }
        }
    }
}

package under {
    package base {
        package stage {
            abstract Stage
            package ai {
                abstract AI
            }
            package entity {
                abstract ImagedEntity
                abstract ImmutableObject
                abstract MutableObject
                abstract AutonomyObject
                package interface {
                    interface IBreakable
                }
            }
        }
    }
}

AI <.. AIListedObject : Update and apply

Stage <.. AttackObject : Destroy

ImagedEntity <|.. OnlyImageEntity
ImmutableObject <|.. TileObject
MutableObject <|.. Obstacle
AutonomyObject <|.. AIListedObject

AIListedObject <|-- PossessedObject
AIListedObject <|.. AttackObject
IBreakable <|.. AttackObject

@enduml
