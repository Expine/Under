@startuml EditorStage

package editor {
    package ed_stage {
        class EditorStage {
            +EditorStage(tileInfo,entityInfo) : EditorStage
            #tileInfo : Dictionary<number, json>
            #entityInfo : Dictionary<number, json>
            #selectedX : number
            #selectedY : number
            #tileSelection : Selection
            #entitySelection : Selection
            #saveData : string
            #playMode : bool
            #entitiesID : Array<number>
            +getTileInfo() : Dictionary<number, json>
            +getEntityInfo() : Dictionary<number, json>
            +addEntityID(id)
            +getSaveData() : json
            +restore()
        }

        package ed_parser {
            class EditorStageParser
        }
        package ed_camera {
            class EditorCamera {
                #moving : bool
                #moveStartX : number
                #moveStartY : number
                #screenDiffX : number
                #screenDiffY : number
            }
        }
    }
}

package under {
    package base {
        package stage {
            package camera {
                abstract Camera
            }
        }
    }
    package extend {
        package ex_stage {
            class SplitManagemenetStage
            package ex_back {
                class SequentialBackground
                class InvariantBackground
            }
        }
    }
}

package game {
    package ga_stage {
        class UnderStageParser
    }
}

EditorStage <.. EditorStageParser : "Generate"
EditorCamera <.. EditorStageParser : "Generate"
EditorMap <.. EditorStageParser : "Generate"
EditorInvariantMap <.. EditorStageParser : "Generate"

Camera <|.. EditorCamera
UnderStageParser <|.. EditorStageParser
SplitManagemenetStage <|-- EditorStage
SequentialMap <|-- EditorMap
InvariantMap <|-- EditorInvariantMap

@enduml
