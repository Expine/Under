@startuml EditorGameBase

package editor {
    class EditorMain
    class EditorBuilder {
        #makeEngine() : Engine <<override>>
        #makeScreen() : GameScreen <<override>>
        #makeInput() : Input <<override>>
        #makeContext() : Context <<override>>
        #makeTimer() : Timer <<override>>
    }

    package ed_context {
        class EditorContext {
            +preRendering() <<override>>
        }
    }
}

package under {
    package extend {
        class UnderEngineBuilder
        package ex_context {
            class CanvasContext
        }
        package ex_screen {
            class DetectiveScreen
            class FitableScreen
        }
        package ex_input {
            class AllInput
            class KeyInput
            class MouseInput
        }
        package ex_timer {
            class RecordedTimer
        }
    }
    package debug {
        class UnderDebugEngine
    }
}

package editor {
    package ed_scene {
        class EditorScene
    }
}

EditorBuilder <.. EditorMain : Generate and build, Execute
EditorScene <.. EditorMain : Generate

UnderDebugEngine <.. EditorBuilder : Generate
DetectiveScreen <.. EditorBuilder : Generate
FitableScreen <.. EditorBuilder : Generate
EditorContext <.. EditorBuilder : Generate
AllInput <.. EditorBuilder : Generate
KeyInput <.. EditorBuilder : Generate
MouseInput <.. EditorBuilder : Generate
RecordedTimer <.. EditorBuilder : Generate

UnderEngineBuilder <|--- EditorBuilder
CanvasContext <|-- EditorContext

@enduml
