@startuml GameBaseExtend

package under {
    package extend {
        class UnderEngineBuilder
        class UnderEngine {
            #oldTime : number
            -render_ : lambda
            #update()
            #render()
        }
        class UnderDebugEngine

        package ex_input {
            abstract StateInputManager {
                #inputState : Array<number>
                #blocked : Array<bool>
                #STATE: Enum<number>
                #target : Element
            }
            class KeyInput {
                {abstract} #onKeyDown(keyEvent)
                {abstract} #onKeyUp(keyEvent)
            }
            class PreventKeyInput
            class MouseInput {
                #mouseX_
                #mouseY_
                {abstract} #onMouseMove(mouseEvent)
                {abstract} #onMouseDown(mouseEvent)
                {abstract} #onMouseUp(mouseEvent)

            }
            class AllInput {
                #keyDelegate : IKey
                #mouseDelegate : IMouse
                #mousBaseCode : number
            }
        }
        package ex_screen {
            class GeneratableScreen {
                +GeneratableScreen(width,height) : GeneratableScreen
                #canvas : Canvas
            }
            class ScalableScreen
            class FitableScreen
        }

        package ex_resource {
            abstract CachedArrayManager {
                #resources : Array<Object>
                #caches : Dictionary<string, Object>
                #loadResource(filePath) : Object
            }
            class CachedImage
            class CachedMusic {
                #context : AudioContext
            }
            package ex_music {
                class BufferSourceMusic {
                    -music_ : Array<BufferSource>
                    -bgmList_ : Array<number>
                    -context_ : AudioContext
                }
            }

            package ex_image {
                class JSContext {
                    -fontColor_ : string
                    -fontSize_ : number
                    -fontName_ : string
                    -lineColor_ : string
                    -lineWidth_ : number
                    -ctx_ : CanvasRenderingContext2D
                }
                class GLContext {
                    -gl_ : WebGLRenderingContext
                }
                class SingleAnimation {
                    #animation : Array<AnimationElement>
                    #animationCount : number
                    #runningAnimarion : number
                    #loop : bool
                    #ended : bool
                    #paused : bool
                }
                class MultiNamedAnimation {
                    #name : string
                    #animation : Dictionary<string, Animation>
                }
            }

        }

        package ex_timer {
            class SimpleTimer {
                #initTime : number
                #namedTimer : Dictionary<string. number>
                #namedStartTimer : Dictionary<string. number>
            }
        }

        package ex_util {
            class Util {
                {static} +onGround(entity) : bool
                {static} +getUnderEntity(entity) : Entity
                {static} +getSideEntity(entity) : Entity
                {static} +getCollidedEntity(self, data) : Entity
                {static} +loadFile(filePath) : string
            }
        }
    }
}

package under {
    package base {
        abstract EngineBuilder
        abstract Engine
        package input {
            abstract Input
            interface IInput
            interface IKey
            interface IMouse
        }
        package screen {
            abstract Screen
        }
        package resource {
            abstract ResourceManager
            interface IImageManager
            interface IMusicManager
            package music {
                abstract Music
            }
            package image {
                abstract Context
                abstract Animation
                abstract NamedAnimation
            }
        }

        package timer {
            abstract Timer
        }
    }
    package extend {
        package ex_scene {
            class StackSceneManager
        }
    }
}

UnderEngine <.. UnderEngineBuilder  : Generate
UnderDebugEngine <.. UnderEngineBuilder  : Generate
AllInput <.. UnderEngineBuilder  : Generate
KeyInput <.. UnderEngineBuilder  : Generate
MouseInput <.. UnderEngineBuilder  : Generate
ScalableScreen <.. UnderEngineBuilder  : Generate
JSContext <.. UnderEngineBuilder  : Generate
CachedImage <.. UnderEngineBuilder  : Generate
CachedMusic <.. UnderEngineBuilder  : Generate
BufferSourceMusic <.. UnderEngineBuilder  : Generate
StackSceneManager <.. UnderEngineBuilder  : Generate

Animation "*"--"1" MultiNamedAnimation : Own

GeneratableScreen <|-- ScalableScreen
GeneratableScreen <|-- FitableScreen

EngineBuilder <|.... UnderEngineBuilder
Engine <|.. UnderEngine
UnderEngine <|-- UnderDebugEngine

Input <|.. AllInput
IKey <|.. AllInput
IMouse <|.. AllInput
Input <|-- StateInputManager
IInput <|-- StateInputManager
StateInputManager <|.. KeyInput
IKey <|.. KeyInput
KeyInput <|-- PreventKeyInput
StateInputManager <|.. MouseInput
IMouse <|.. MouseInput

Screen <|.. GeneratableScreen

Context <|.. JSContext
Context <|.. GLContext
Music <|.. BufferSourceMusic
ResourceManager <|.. CachedArrayManager
CachedArrayManager <|.. CachedImage
IImageManager <|.. CachedImage
CachedArrayManager <|.. CachedMusic
IMusicManager <|.. CachedMusic

Animation <|.. SingleAnimation
NamedAnimation <|.. MultiNamedAnimation

Timer <|.. SimpleTimer

@enduml
