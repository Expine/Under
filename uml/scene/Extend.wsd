@startuml SceneExtend

package under {
    package extend {
        package ex_scene {
            class StackSceneManager {
                #scenes : Array<Scene>
                #getScene() : Scene <<override>>
                +pushScene(scene) <<override>>
                +popScene() <<override>>
            }
            class BaseLayeredScene {
                #layers : Array<Layer>
                +addLayer(layer) <<override>>
                #getLayers() : Array<Layer> <<override>>
            }
            class DefaultTitleScene {
                -r_ : number
                -angle_ : number
                +update(dt) <<override>>
                +render(ctx) <<override>>
            }

            package ex_layer {
                class GameoverLayer {
                    +update(dt) <<override>>
                    +render(ctx) <<override>>
                }
            }
        }
    }
}

package under {
    package base {
        package input {
            abstract IKey
            abstract IMouse
        }
        package resource {
            package image {
                abstract Context
            }
        }
        package scene {
            abstract Scene
            abstract LayeredScene
            abstract SceneManager
            package layer {
                abstract Layer
            }
        }
    }
}

Context <.. DefaultTitleScene : Render
IKey <.. DefaultTitleScene : Get key
IMouse <.. DefaultTitleScene : Get mouse
Context <.. GameoverLayer : Render text

SceneManager <|.. StackSceneManager
LayeredScene <|.. BaseLayeredScene
Scene <|.. DefaultTitleScene
Layer <|.. GameoverLayer

@enduml
